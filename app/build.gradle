plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.21'
}

android {
//    sourceSets.main.java.srcDirs += 'build/generated/source/fsb'
    sourceSets.main.kotlin.srcDirs += 'build/generated/source/fsb'
    compileSdk 31
    buildToolsVersion "31.0.0"
    useLibrary("android.test.base")
    useLibrary("android.test.mock")
    defaultConfig {
        applicationId "com.kuromelabs.kurome"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    task generateFbsKotlin(type: Exec) {
        def inputDir = file("$projectDir/src/main/fbs")
        def outputKotlinDir = file("$projectDir/build/generated/source/fsb/")
        def fbsFiles = layout.files { file(inputDir).listFiles() }.filter { File f -> f.name.endsWith(".fbs") }.toList()
        ignoreExitValue(true)

        standardOutput = new ByteArrayOutputStream()
        errorOutput = new ByteArrayOutputStream()
        def commandLineArgs = ['flatc', '-o', outputKotlinDir, '--kotlin']
        fbsFiles.forEach{
            commandLineArgs.add(it.path)
        }
        commandLine commandLineArgs

        doFirst {
            delete "$outputKotlinDir/"
            mkdir "$outputKotlinDir/"
        }
        doLast {
            if (executionResult.get().exitValue != 0) {
                println(standardOutput.toString())
                throw new GradleException("flatc command line failed")
            }
        }
    }
    afterEvaluate {
        android.applicationVariants.all { variant ->
            variant.javaCompileProvider.get().dependsOn(generateFbsKotlin)
        }
    }
    sourceSets {
        main.java.srcDirs += 'build/generated/source/fsb'
    }
}
dependencies {

    implementation 'androidx.lifecycle:lifecycle-service:2.4.0'
    kapt 'androidx.room:room-compiler:2.4.0-rc01'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'io.ktor:ktor-network:1.6.7'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.1'
    implementation 'androidx.room:room-runtime:2.4.0-rc01'
    implementation 'androidx.room:room-ktx:2.4.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.google.flatbuffers:flatbuffers-java:2.0.3'


    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.1.0'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2-native-mt'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation('androidx.test:core:1.4.0')
    androidTestImplementation('androidx.test:runner:1.4.0')
    androidTestImplementation('androidx.test:rules:1.4.0')

}